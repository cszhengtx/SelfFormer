
model:
  type: denoiser
  kwargs:
    dilation: 2
    width: 100
    
    enc_blk_nums: [3,4]
    middle_blk_nums: 4
    dec_blk_nums: [4,3]
    
    R3: True
    R3_T: 24
    R3_p: 0.12


    
model_input: [noisy] # e.g.) real_noisy, syn_noisy, clean

trainer: Trainer

training:
  dataset: prep_SIDD

  dataset_args:
    add_noise: None # e.g.) None bypass uni-15. gau-15. gau_blind-10.:50. het_gau-10.:50. see more detail in denoise_dataset.py
    crop_size: [240,240]
    aug: ['hflip', 'rot']
    n_repeat: 1
  
  batch_size: 1

  max_epoch: 30
  
  init_lr: 1e-4
  scheduler:
    type: step
    step:
      step_size: 8
      gamma: 0.1
  loss: 1*self_L1

  optimizer:
    type: Adam
    Adam:
      betas: [0.9, 0.999]

  warmup: True
  warmup_iter: 200

validation:
  dataset: SIDD_val

  dataset_args:
    crop_size: None # [64, 64]
    add_noise: None # e.g.) None uni-15. gau-15. gau_blind-10.:50. poi_gau-10.:50.
    # n_data: 64

  add_con: 0.5
  floor: True

  val: True
  save_image: True
  
  start_epoch: 25
  interval_epoch: 5
  
checkpoint:
  save: True
  start_epoch: 1
  interval_epoch: 1


test:
  dataset: SIDD_Val
  # dataset: SIDD_benchmark
  
  dataset_args:
    crop_size: None # [64, 64]
    add_noise: None # e.g.) None uni-15. gau-15. gau_blind-10.:50. poi_gau-10.:50.

  add_con: 0.5
  floor: True

  save_image: True
